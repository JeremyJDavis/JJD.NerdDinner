@model NerdDinner.Models.DinnerFormViewModel

    
<script src="/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="/Scripts/jquery.validate-vsdoc.js" type="text/javascript"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <fieldset class="form-horizontal">
        <p>
            <div>
                <label>Dinner Title:</label>
            </div>
            
            @Html.HiddenFor(model => model.DinnerId)

            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </p>

        <p>
            <div>
                <label>Event Date:</label>
            </div>
            @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
        </p>


        <p>
            <div>
                <label>Address:</label>
            </div>
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </p>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <p>
            <div>
                <label>Country:</label>
            </div>
            
    
            @Html.DropDownListFor(model => model.CountryID, Model.Countries, new { onchange = "getAlldata()" })
            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
        </p>
        
        <p>
            <div>
                <label>Latitude:</label>
            </div>
            @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Latitude, "", new {@class = "text-danger"})
            <div>
                <label>Latitude:</label>
            </div>
            @Html.EditorFor(model => model.Longitude, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Longitude, "", new {@class = "text-danger"})

        </p>

        <p>
            <div>
                <label>Contact Email:</label>
            </div>
            @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
        </p>
        
        <p>
            <input type="submit" value="Save" />
        </p>
        

        <div id="MapContainer" style="position:relative;left:200px;bottom:300px">
            @Html.Partial("Map")
        </div>

        <script type="text/javascript" , src="/Scripts/jquery-1.10.2.js"></script>
        <script type="text/javascript">
            $(document).ready(function() {
                $("#Address").blur(function(event) {
                    updateMapCenterToAddress();
                });
            });

            $("#saveButton").click(function() {
                updateDinnerCoordinates();
            });

            function updateMapCenterToAddress() {
                var address = getAddress();
                if (address.length < 1)
                    return;
                SetMapCenterToAddress(getEventTitle(), address);
            }

            function updateDinnerCoordinates() {
                if (pushpins.length == 0)
                    return;
                var pushpinLocation = pushpins[pushpins.length-1].getLocation();
                $("#Latitude").val(pushpinLocation.latitude);
                $("#Longitude").val(pushpinLocation.longitude);
            }

            function getAddress() {
                return jQuery.trim($("#Address").val());
            }

            function getEventTitle() {
                return jQuery.trim($("#Title").val());
            }
        </script>

    </fieldset>

}
