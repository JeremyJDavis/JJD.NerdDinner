@*@model NerdDinner.Models.Dinner

    
<script src="/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="/Scripts/jquery.validate-vsdoc.js" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dinner</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DinnerId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

@model NerdDinner.Models.Dinner
    
<script src="/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="/Scripts/jquery.validate-vsdoc.js" type="text/javascript"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <fieldset class="form-horizontal">
        <p>
            <div>
                <label>Dinner Title:</label>
            </div>
            @Html.TextBox("Title", Model.Title)
            @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
        </p>

        <p>
            <div>
                <label>Event Date:</label>
            </div>
            @Html.TextBox("EventDate", String.Format("{0:g}", Model.EventDate))
            @Html.ValidationMessage("EventDate", "", new { @class = "text-danger" })
        </p>


        <p>
            <div>
                <label>Address:</label>
            </div>
            @Html.TextBox("Address", Model.Address)
            @Html.ValidationMessage("Address", "", new { @class = "text-danger" })
        </p>

        <p>
            <div>
                <label>Country:</label>
            </div>
            @*@Html.DropDownList("Country", null, htmlAttributes: new { @class  ="form-control"})*@
            @Html.TextBox("Country", Model.Country)
        </p>
        
        <p>
            @Html.Hidden("Latitude", Model.Latitude)
            @Html.Hidden("Longitude", Model.Longitude)

        </p>

        <p>
            <div>
                <label>Contact Email:</label>
            </div>
            @Html.TextBox("ContactEmail", Model.ContactEmail)
            @Html.ValidationMessage("ContactEmail", "", new { @class = "text-danger" })
        </p>
        
        <p>
            <input type="submit" value="Save" />
        </p>
        

        @*<div id="dinnerDiv">

        </div>

        <div id="mapDiv">
            @{
                Html.RenderPartial("Map", Model.Dinner);
            }
        </div>


        <script type="text/javascript">

            $(document).ready(function() {
                $("#Address").blur(function(evt) {
                    $("#Latitude").val("");
                    $("#Longitude").val("");

                    var address = jQuery.trim($("#Address").val());
                    if (address.length < 1)
                        return;

                    FindAddressOnMap(address);
                });
            });

        </script>*@

    </fieldset>

}
